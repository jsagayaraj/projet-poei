<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 * 
 * Example on how to alter theme settings form
 * 
 */
function bootstrap_barrio_subtheme_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
}

function bootstrap_barrio_subtheme_preprocess_page(&$variables)
{
  $icons = theme_get_setting('bootstrap_barrio_icons');
  if ($icons) {
    $variables['#attached']['library'][] = ( $icons == 'fontawesome_5' ? 'bootstrap_barrio_subtheme' : 'bootstrap_barrio' ) . '/' . $icons;
  }
}

/**
 * Implements hook_suggestions_page_alter() to add classes to the search form.
 */
function bootstrap_barrio_subtheme_suggestions_page_alter(array &$suggestions, array $variables){
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $nid = $node->id();
    $suggestions[] = 'page__'.$content_type;
    $suggestions[] = 'page__node__'.$nid;    
    //ksm($suggestions);
  }
}


// function organisation_webform_submission_update(WebformSubmissionInterface $entity){
//   $user_id = $entity->getOwnerId();
//   $participants = $entity->getSourceEntity()->field_participants->getValue();
//   $data = $entity->getData();
//   ksm($data);
//   //ajoute le participant à la Conférence
//   if($data['adhesion'] == 'acceptée' && !in_array(['target_id'=> $user_id], $participants)) {
//     $entity->getSourceEntity()->field_participants->setValue(
//       array_merge($participants, ['target_id'=> $user_id])
//     );
//     $entity->getSourceEntity()->save();
//   }

//   // supprime le participant à la Conférence
//   if($data['adhesion'] != 'acceptée' && in_array(['target_id'=> $user_id], $participants)) {
//     $key_data = array_search(['target_id'=> $user_id], $participants);
//     unset($participants[$key_data]);
//     $entity->getSourceEntity()->field_participants->setValue($participants);
//     $entity->getSourceEntity()->save();
//   }
//   ksm($participants);
// }